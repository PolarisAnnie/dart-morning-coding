void main() {
  /* 버블 정렬
  값이 순서대로 정렬이 되어 있지 않을 때 인접한 두 값을 비교해서 큰 값을 뒤로 보내기 반복해서 정렬 
  */
  //[7, 9, 2, 3, 1]
  // 첫번째 라운드
  // 0번째, 1번째 비교 후. 교환 [7, 9, 2, 3, 1]
  // 1번째, 2번째 비교 후. 교환 [7, 2, 9, 3, 1]
  // 2번째, 3번째 비교 후. 교환 [7, 2, 3, 9, 1]
  // 3번째, 4번째 비교 후 교환 [7, 2, 3, 1, 9]
  // 두번째 라운드
  // 0번째, 1번째 비교 후. 교환 [2, 7, 3, 1, 9]
  // 1번째, 2번째 비교 후. 교환 [2, 3, 7, 1, 9]
  // 2번째, 3번째 비교 후. 교환 [2, 3, 1, 7, 9]
  // 세번째 라운드
  // ... 2회
  // 네번째 라운드
  // ... 1회

  List<int> number = [9, 7, 2, 3, 1];
  int count = 4; // number.length를 활용한 방식으로도 수정해보기
  while (count > 0) {
    for (int i = 0; i < count; i++) {
      if (number[i] > number[i + 1]) {
        int temp = number[i]; //임시로 넣어주지 않으면 같은 값이 대치됨
        number[i] = number[i + 1];
        number[i + 1] = temp;
      }
    }
    count -= 1;
  }
  print(number);
}

void bubbleSort(List<int> number) {
  // 함수화 하면 코드 재사용성 높이는 형식으로 활용 가능
}
